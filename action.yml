name: 'Build and Deploy'
description: 'Unique step to Build and Deploy'
inputs:
  # GHCR
  GHCR_USERNAME:
    description: "user de acr"
    required: true
  GHCR_PASSWORD:
    description: "passwrd de acr"
    required: true
  GHCR_REGISTRY:
    description: "nombre del acr con azurecr.io"
    required: true
  GHCR_PAT:
    description: "PAT"
    required: true

  # App
  appName:
    description: "Nombre de la aplicacion (dentro del proyecto)"
    required: true
  teamProject:
    description: "Nombre del proyecto/equipo"
    required: true
  appVersion:
    description: "tag para subir imagen"
    required: true
  namespace:
    description: "nombre de namespaces"
    required: false
    default: ""
  environment:
    description: "nombre de environment"
    required: false
    default: ""
  chartFolder:
    description: 'Nombre de folder del chart de Helm'
    default: 'pythonChart'
  chartName:
    description: 'Nombre de chart de Helm'
    default: 'python-chart'

  # Values
  helmRepo:
    description: "Repositorio de helm"
    required: false
    default: "infrastructure-services/poc-orleans"
  helmRepoRef:
    description: "Ref del repositorio de Helm"
    required: false
    default: "main"
  fileValuesPath:
    description: "path archivo de values.yaml"
    required: true
  GITHUB_HELMREPO_TOKEN:
    description: "Token para descargar el codigo de templates HELM"
    required: true

  # HELM
  helmChartVersionLatest:
    description: "VersionHelm"
    required: true

outputs:
  name_environment: 
    description: "Nombre del environment"
    value: ${{ steps.setOutputs.outputs.environment }}

runs:
  using: "composite"
  steps:
      - name: Set Outputs
        id: setOutputs
        shell: bash
        run: |
          echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT

      - name: Generate values.yaml
        id: value
        uses: infrastructure-services/actions@build-values-2
        with:
          appName: ${{ inputs.appName }}
          teamProject: ${{ inputs.teamProject }}
          namespace: ${{ inputs.namespace }}
          appVersion: ${{ inputs.appVersion }}
          fileValuesPath: ${{ inputs.fileValuesPath }}
          GITHUB_HELMREPO_TOKEN: ${{ inputs.GITHUB_HELMREPO_TOKEN }}
          helmRepoRef: ${{ inputs.helmRepoRef }}
          helmRepo: ${{ inputs.helmRepo }}
      
      - name: build paquete helm.
        id: helm
        uses: infrastructure-services/actions@build-helm-2
        with:
          appName: ${{ inputs.appName }}
          teamProject: ${{ inputs.teamProject }}
          namespace: ${{ inputs.namespace }}
          appVersion: ${{ inputs.appVersion }}
          chartFolder: ${{ inputs.chartFolder }}
          chartName: ${{ inputs.chartName }}
          helmChartVersionLatest: ${{ inputs.helmChartVersionLatest }}
          GHCR_USERNAME: ${{ inputs.GHCR_USERNAME }}
          GHCR_PASSWORD: ${{ inputs.GHCR_PASSWORD }}
          GHCR_PAT: ${{ inputs.GHCR_PAT }}

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: cortiz2024/test_image
          token: ${{ inputs.GHCR_PAT }}

      - name: Update Helm release version on Argocd Application
        id: change_helm_chart_version
        shell: bash
        run: |
          ls -l
          sed -i "s/targetRevision: .*/targetRevision: ${{ inputs.helmChartVersionLatest }}-${{ inputs.environment }}/" overlays/${{ inputs.environment }}/${{ inputs.appName }}/patch-values.yaml
          cat overlays/${{ inputs.environment }}/${{ inputs.appName }}/patch-values.yaml
          git diff --exit-code || echo "changes=true" >> $GITHUB_OUTPUT
          
      - name: Commit and push changes
        if: ${{ steps.change_helm_chart_version.outputs.changes == 'true' }}
        shell: bash
        run: |
          git config --global user.name '${{ inputs.GHCR_USERNAME }}'
          git config --global user.email '${{ inputs.GHCR_USERNAME }}@users.noreply.github.com'
          git commit -am "Updated Helm release version to ${{ inputs.helmChartVersionLatest }}-${{ inputs.environment }}"
          git push

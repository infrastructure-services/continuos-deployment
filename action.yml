name: 'Deploy AZ Container Apps'
description: 'Deploy app in Az container apps'
inputs:
  AZCREDENTIAL:
    description: "credenctial for azure"
    required: true 
  AZRG:
    description: "Azure Resource Group"
    required: true
  AZ_LOCATION:
    description: "Azure Location"
    required: true

  # ACR
  ACR_USERNAME:
    description: "user de acr"
    required: false
    default: "azdevops"
  ACR_PASSWORD:
    description: "passwrd de acr"
    required: false
    default: "iuua7hxBI7NM/WCpHmAugFpj2JHHFb5o"
  ACR_NAME:
    description: "nommbre del acr"
    required: false
    default: "glaregistry"
  ACR_FULL_NAME:
    description: "nombre del acr con azurecr.io"
    required: false
    default: "glaregistry.azurecr.io"

  # App
  appName:
    description: "Nombre de la aplicacion (dentro del proyecto)"
    required: true
  teamProject:
    description: "Nombre del proyecto/equipo"
    required: true
  appVersion:
    description: "tag para subir imagen"
    required: true
  namespace:
    description: "nombre de namespaces"
    required: false
    default: ""
  environment:
    description: "nombre de environment"
    required: false
    default: ""
  containerAppName:
    description: "nombre de container"
    required: false
    default: ""

  # Values
  fileValuesPath:
    description: "path archivo de values.yaml"
    required: true
  GITHUB_HELMREPO_TOKEN:
    description: "Token para descargar el codigo de templates HELM"
    required: true

  # HELM
  clusterFqdn:
     description: "FQDN para pasarle a helm"
     required: false
     default: ""
    
outputs:
  name_environment: 
    description: "Nombre del environment"
    value: ${{ steps.setOutputs.outputs.environment }}
  url_environment:
    description: "URL del environment"
    value: ${{ steps.setOutputs.outputs.url }}

runs:
  using: "composite"
  steps:
      - uses: actions/checkout@v4
      - name: set container app name
        id: setAppName
        shell: bash
        run: |
          if [ -z "${{ inputs.containerAppName }}" ]; then
            echo "Using default constructed name"
            CONTAINER_APP_NAME="${{ inputs.teamProject }}-${{ inputs.appName }}-${{ inputs.environment }}"
          else
            echo "Using provided container app name"
            CONTAINER_APP_NAME="${{ inputs.containerAppName }}"
          fi
          echo "containerAppName=$CONTAINER_APP_NAME" >> $GITHUB_OUTPUT
      - name: Set foobar to cool
        uses: mikefarah/yq@master
        with:
          cmd: yq eval -o=json  '${{ inputs.fileValuesPath }}' > .devops/value-${{ inputs.environment }}.json
      - run: |
          cd .devops
          ls
        shell: bash
      - name: Convertir JSON a variables de entorno
        uses: actions/github-script@v6
        id: BuildVariables
        with:
          script: |
            const fs = require('fs');
            const path = '.devops/value-${{ inputs.environment }}.json';
            const fileContents = fs.readFileSync(path, 'utf8');
            const data = JSON.parse(fileContents);
            const envVars = data.env;
            let envList = '';
            for (const [key, value] of Object.entries(envVars)) {
              envList += `${key}=${value} `;
            }
            console.log(envList);
            core.setOutput("env_list", envList.trim());
            core.setOutput("port", data.targetPort);
      
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ inputs.AZCREDENTIAL }}

      - name: Deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          resourceGroup: ${{ inputs.AZRG }}
          acrName: ${{ inputs.ACR_NAME }}
          acrUsername: ${{ inputs.ACR_USERNAME }}
          acrPassword: ${{ inputs.ACR_PASSWORD }}
          registryUsername: ${{ inputs.ACR_USERNAME }}
          registryPassword: ${{ inputs.ACR_PASSWORD }}
          imageToDeploy: ${{ inputs.ACR_FULL_NAME}}/${{ inputs.teamProject }}-${{ inputs.appName }}:${{ inputs.appVersion }}
          containerappName: ${{ steps.setAppName.outputs.containerAppName }} 
          containerAppEnvironment: ${{ inputs.environment }}
          targetPort: ${{ steps.BuildVariables.outputs.port }}
          location: ${{ inputs.AZ_LOCATION }}
          environmentVariables: ${{ steps.BuildVariables.outputs.env_list }}
      - name: Set Outputs
        id: setOutputs
        shell: bash
        run: |
          echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
          URL=$(az containerapp show --name ${{ inputs.teamProject }}-${{ inputs.appName }} --resource-group ${{ inputs.AZRG }} --query properties.configuration.ingress.fqdn -o tsv)
          echo "url=$URL" >> $GITHUB_OUTPUT
